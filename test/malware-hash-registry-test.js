// BDD-style tests
var chai = require('chai');
chai.should();
var expect = chai.expect;

var S = require('string'); // for startsWith() and endsWith()
var fs = require('fs'); // for reading files

var MalwareHashRegistry = require('../lib/malware-hash-registry');

describe('MalwareHashRegistry', function () {
  var mhr;
  var digests;
  before(function () {
    mhr = new MalwareHashRegistry();
    digests = [
      '44D88612FEA8A8F36DE82E1278ABB02F',
      'f95af17cfb2325b2b40e5486fce6db0e',
      '6e88d7fb0ac540ec143943fa0426139b'
    ];
  });

  describe('#_generateRequest()', function () {
    it('should return begin/end wrapped digests with newlines', function () {
      var request = mhr._generateRequest(digests);
      expect(request).to.be.a('string');

      request = S(request);
      expect(request.startsWith('begin\r\n')).to.be.true();
      expect(request.endsWith('end\r\n')).to.be.true();
    })
  })

  describe('#_parseDetectionRate()', function () {
    it('should handle "NO_DATA" rates', function () {
      var rate = mhr._parseDetectionRate('NO_DATA');
      expect(rate).to.be.null();
    });

    it('should handle detected rates', function () {
      var rate = mhr._parseDetectionRate('37');
      expect(rate).to.equal(37);
    });
  });

  describe('#_parseAndConvertTimestamp()', function () {
    it('should convert from seconds to milliseconds', function () {
      var timestampString = '1259633424';
      var timestamp = mhr._parseAndConvertTimestamp(timestampString);
      expect(timestamp).to.be.a('number');
      expect(timestamp).to.equal(1259633424 * 1000);
    });
  });
})
